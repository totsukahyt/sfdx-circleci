version: 2.1
orbs:
  sfdx: circleci/salesforce-sfdx@2.0.0
  slack: circleci/slack@3.4.2

general:
# Uncomment the following to specify only a specific branch
#   branches:
#     only:
#       - dev # specific branch
#       - /dev-.*/ # or regexes

jobs:
  build:
    executor: sfdx/default
    # environment:
    #   RES: res
    steps:
      - checkout
      - sfdx/install
      # - run: echo $SFDX_JWT_KEY | base64 --decode --ignore-garbage > ./server.key
      # - run: sfdx force:auth:jwt:grant --clientid ${SFDX_CONSUMER_KEY} --jwtkeyfile assets/server.key --username ${HUB_SFDC_USER} --setdefaultdevhubusername --setalias ${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BRANCH}
      # - run: openssl enc -nosalt -aes-256-cbc -d -in assets/server.key.enc -out assets/server.key -base64 -K ${DECRYPTION_KEY} -iv ${DECRYPTION_IV}
      # - run: sfdx force:auth:jwt:grant --clientid ${SFDX_CONSUMER_KEY} --jwtkeyfile assets/server.key --username ${HUB_SFDC_USER} --setdefaultdevhubusername --setalias ${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BRANCH}


####################################################################################################
## JOB:     create-dev-scratch-org
## PURPOSE:
####################################################################################################
  create-dev-scratch-org:
    docker:
      - image: ncino/ci-sfdx
    # machine: true
    working_directory: ~/ci_app
    steps:
      - checkout
      - run:
          name: create-feature-scratch
          command: |
            openssl enc -nosalt -aes-256-cbc -d -in assets/server.key.enc -out assets/server.key -base64 -K ${DECRYPTION_KEY} -iv ${DECRYPTION_IV} 
            sfdx force:auth:jwt:grant --clientid ${SFDX_CONSUMER_KEY} --jwtkeyfile assets/server.key --username ${HUB_SFDC_USER} --setdefaultdevhubusername --setalias circleCI
            sfdx force:data:soql:query -q "SELECT Name,OrgName,ScratchOrg,Description FROM ScratchOrgInfo WHERE status = 'Active' AND OrgName = '$CIRCLE_BRANCH'" -u circleCI | wc -l > scratchorg.cnt
            cat scratchorg.cnt
            SCRATCH_CNT=$(cat scratchorg.cnt)
            echo "scratch:count=${SCRATCH_CNT}"
            echo "'$CIRCLE_BRANCH'"
            echo "${CIRCLE_BRANCH}"
            if [ "${SCRATCH_CNT}" = "1" ]; then
              echo 'Featrue/scratch環境の作成 '

              sfdx force:org:create username=${CIRCLE_WORKFLOW_ID}@test.org -f config/project-scratch-def.json -a ${CIRCLE_BRANCH} -s -d 30  --wait 5 
              sfdx force:user:password:generate -u ${CIRCLE_WORKFLOW_ID}@test.org | sed 's/"/------/g' >> /tmp/ss.txt
              sfdx force:source:push -u ${CIRCLE_BRANCH}
            else
              echo 'すでに環境が作成されています。'
              
            fi

      - run: cat /tmp/ss.txt

      # - run:
      #    name: 実行時の PATH 書き換えおよび環境変数定義
      #    command: |
      #     sfdx force:org:list --all  >> /tmp/ss.txt
      - run: |
          echo 'export VERY_IMPORTANT=$(cat /tmp/ss.txt)' >> $BASH_ENV
          source $BASH_ENV
      - run: echo $VERY_IMPORTANT
      # - run: sfdx force:org:list >> /tmp/artifacts.txt
      # - sfdx/scratch-open:
      #     scratch-alias: circleci


      - slack/notify:
          channel: circlecidevelop
          color: '#42e2f4'
          message: "${CIRCLE_BRANCH} $'\n' ${VERY_IMPORTANT}"
          webhook: '${SLACK_WEBHOOK}'
          include_job_number_field: false

####################################################################################################
## JOB:     build-and-test
## PURPOSE:
####################################################################################################
  build-and-test:
    docker:
      - image: ncino/ci-sfdx
    # machine: true
    working_directory: ~/ci_app
    steps:
      - checkout
      - run:
          name: create-feature-scratch
          command: |
            openssl enc -nosalt -aes-256-cbc -d -in assets/server.key.enc -out assets/server.key -base64 -K ${DECRYPTION_KEY} -iv ${DECRYPTION_IV} 
            sfdx force:auth:jwt:grant --clientid ${SFDX_CONSUMER_KEY} --jwtkeyfile assets/server.key --username ${HUB_SFDC_USER} --setdefaultdevhubusername --setalias circleCI
            sfdx force:org:create username=${CIRCLE_WORKFLOW_ID}@test.org -f config/project-scratch-def.json -a master_${CIRCLE_BRANCH} -s -d 30  --wait 5 
            sfdx force:user:password:generate -u ${CIRCLE_WORKFLOW_ID}@test.org | sed 's/"/------/g' >> /tmp/ss.txt
            sfdx force:source:push -u master_${CIRCLE_BRANCH}
      - run:
          name: Run Apex Tests
          command: |
            mkdir -p ~/junit
            sfdx force:apex:test:run -c -d ~/junit -r junit --wait 5 | sed 's/"/------/g' >> /tmp/ss.txt

      - run: cat /tmp/ss.txt

      # - run:
      #    name: 実行時の PATH 書き換えおよび環境変数定義
      #    command: |
      #     sfdx force:org:list --all  >> /tmp/ss.txt
      - run: |
          echo 'export VERY_IMPORTANT=$(cat /tmp/ss.txt)' >> $BASH_ENV
          source $BASH_ENV
      - run: echo $VERY_IMPORTANT
      # - run: sfdx force:org:list >> /tmp/artifacts.txt
      # - sfdx/scratch-open:
      #     scratch-alias: circleci


      - slack/notify:
          channel: circlecidevelop
          color: '#42e2f4'
          message: "${VERY_IMPORTANT}"
          webhook: '${SLACK_WEBHOOK}'
          include_job_number_field: false
      - run:
          name: delete MasterScratch
          command: |
            sfdx force:org:delete -u ${CIRCLE_BRANCH} -p


workflows:
  version: 2.1
  create_dev_scratch_org:
    jobs:
      - build:
        filters:
              branches:
                only:
                  - /feature.*/
                ignore:
                  - master
                  - PreProduction
                  - Production
      - create-dev-scratch-org:
          requires:
            - build
  build_and_test:
    jobs:
      - build:
        filters:
              branches:
                only:
                  - master
                ignore:
                  - PreProduction
                  - Production
                  - /feature.*/
      - build-and-test:
          requires:
            - build


  # build_and_test:
  #   jobs:
  #     - build
          # context: org-sbdevhub
          # filters:
          #   branches:
          #     only:
          #       - master
  # create_beta_package:
  #   jobs:
  #     - create-beta-package:
  #         context: org-sbdevhub
  #         filters:  # ブランチのない、「v」から始まるタグに対してのみ実行します。
  #           tags:
  #              only:
  #                - /v.*/
  #           branches:
  #             ignore: /.*/

      # - slack/notify:
      #     channel: '#general'
      #     color: '#42e2f4'
      #     include_job_number_field: false
      #     message: 'testbranch'
      #     webhook: '${SLACK_WEBHOOK}'