<!-- SB_NameCard_SSetGeoLocations
/**
 *
 * Salesforce1対応 名刺に緯度経度情報を追加
 *
 * Copyright (C) 2014 SunBridge Inc. All Rights Reserved.
 *
 *  @author sawano
 *  @Version 1      2014.5.xx
 **/
-->
<apex:page sidebar="false" showheader="false" Controller="SB_NameCard_SController" title="名刺に緯度経度情報を追加">

<script type="text/javascript" src="https://maps.google.com/maps/api/js?sensor=false"/>
<apex:includeScript value="{!URLFOR($Resource.SB_SmartVisca_Lib, 'js/jquery.min.js')}"/>
<style>
    html, body { height: 100%; }
    .page-map, .ui-content, #dvMap { width: 100%; height:100%; padding: 0; }
    #dvMap { height: min-height: 100%; }
</style>
<script type="text/javascript">
    var $ = jQuery.noConflict();
	$(document).ready(function($){
		initializeUserInfo();
	    initializeMap();
	});

	function initializeUserInfo() {
		if ("{!JSENCODE(SVConfig.userId)}" == "{!$User.Id}") return;
        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SB_NameCard_SController.getUserInfo}',
        	"{!JSENCODE(SVConfig.userId)}",
            function(result, event){
                if (event.status) {
                	$("#userName").append(result.Name + "さん所有の名刺に地理位置情報を追加します。");
                } else {
                    $("#btnSubmit").attr("disabled", "disabled");
                	$("#userName").append("クエリパラメータが不正です。").css("color", "red");
                    console.log('getUserInfo NG');
                }
            },
            {escape: true}
        );
	}

    var geocoder;
    var map;
    function sleep(time, callback){
        setTimeout(callback, time);
    }

    function initializeMap() {
        geocoder = new google.maps.Geocoder();
        navigator.geolocation.getCurrentPosition(function(position){
            lat = position.coords.latitude;
            lon = position.coords.longitude;
            var currentPosition = new google.maps.LatLng(lat, lon);
            var mapOptions = {
                zoom: 8,
                center: currentPosition,
                //      scaleControl: true
                mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);
            // Set a marker for the current location
            var positionMarker = new google.maps.Marker({
                map: map,
                position: currentPosition,
                icon: 'http://maps.google.com/mapfiles/ms/micons/green.png'
            });
            // Keep track of the map boundary that holds all markers
            var mapBoundary = new google.maps.LatLngBounds();
            mapBoundary.extend(currentPosition);
        });
    }


    function codeAddress() {
//           geocoder = new google.maps.Geocoder();
		$("#btnSubmit").attr('disabled', true);
		$("#dvResult").append("開始します。<br/>");
        // Use Visualforce JavaScript Remoting to query for nearby namecards
        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SB_NameCard_SController.getNameCardsWithoutGeoLocation}',
        	"{!JSENCODE(SVConfig.userId)}",
            function(result, event){
                if (event.status) {
					$("#dvResult").append("Salesforceから名刺データを取得しました。<br/>");
                    console.log('getNameCardsWithoutGeoLocation' + result);
                    createMap(result);
                } else if (event.type === 'exception') {
                	$("#dvResult").append("Salesforceから名刺データの取得に失敗しました。<br/>");
                    //exception case code
                    console.log('getNameCardsWithoutGeoLocation exception');
                } else {
                	$("#dvResult").append("Salesforceから名刺データの取得に失敗しました。<br/>");
                    console.log('getNameCardsWithoutGeoLocation NG');
                }
            },
            {escape: true}
        );
    }

    function createMap(namecards){
    	$("#dvResult").empty();
        if (namecards == null || namecards.length ==0) {
            alert("住所があって、緯度経度がない 名刺データは もうありません。。");
            $("#dvResult").append("住所があって、緯度経度がない 名刺データは もうありません。。<br/>");
            return;
        }
		$("#msg").append("終わるまで、" + namecards.length*{!SGeolocationQueryInterval}/1000 + "秒間待っててください。");
		$("#msg").css("color", "red");
		$("#msg").css("font-size", "14pt");
        // 所得した対象の名刺を1枚づつ処理
        var cnt=0;
		var procGetSave = setInterval(setGeoLocation, {!SGeolocationQueryInterval});

        // Resize map to neatly fit all of the markers
        var mapBoundary = new google.maps.LatLngBounds();
//            map.fitBounds(mapBoundary);

        // 緯度経度取得とピンの表示
        function setGeoLocation(){
        	var namecard = namecards[cnt];
            // Geocoding API コール
            var namecard_addr = namecard.address__c;
            geocoder.geocode( { address: namecard_addr, language:'ja' }, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    // 成功
                    namecard.GeoLocation__Latitude__s = Math.round(results[0].geometry.location.lat() * 1000000) /1000000;
                    namecard.GeoLocation__Longitude__s = Math.round(results[0].geometry.location.lng() * 1000000) /1000000;
                    // ピンをたてる
                    var marker = new google.maps.Marker({
                        map: map,
                        position: new google.maps.LatLng(
                                 namecard.GeoLocation__Latitude__s,
                                 namecard.GeoLocation__Longitude__s)
                    });
                    mapBoundary.extend(marker.getPosition());
                    $("#dvResult").append(namecard.Name + ' : ' + namecard.address__c + ' : ' +  namecard.GeoLocation__Latitude__s + ' : ' +   namecard.GeoLocation__Longitude__s +'</br>');
                } else {
                    var msg = "Geocode was not successful for the following reason: " + status;
                    console.log(msg);
//                    namecard.GeoLocation__Latitude__s = 0;
//                    namecard.GeoLocation__Longitude__s = 0;
                    $("#dvResult").append(namecard.Name + ' : ' + namecard.address__c + ' : ' +  status +'</br>');
                }
                cnt++;
                // 最後の名刺の 緯度経度を取得したら、Salesforceに保存
                if (cnt == namecards.length) {
                	saveGeoLocation();
                }
            });
        }
		function saveGeoLocation() {
			$("#dvResult").append("Salesforceへの保存を開始します。<br/>");
			clearInterval(procGetSave);	// タイマイベントの終了
             // 最後まで緯度経度を取得し終わった
/*             console.log(card.Id);
             var cards = new Array();
             cards.push(card);*/
             // Salesforce に保管 オブエジェクトそのまま保存できるメソッドを呼びます。
             Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SB_NameCard_SController.saveNameCardsRaw}',
                 namecards,
                 function(result, event){
                     if (event.status) {
                        console.log(result);
                        $("#dvResult").append("Salesforceへの保存が成功しました。<br/>まだ残っていたら再度、ボタンをクリックしてください。<br/>");
                        terminateProc();
                     } else if (event.type === 'exception') {
                         //exception case code
                        $("#dvResult").append("↑Salesfoceに保管で例外発生<br/>");
                        terminateProc();
                     } else {
                        $("#dvResult").append("↑Salesfoceに保管に失敗しました。<br/>");
                        terminateProc();
                     }
                 },
                 {escape: true}
             );
		}
    }

	// ボタンクリックの1回分がおわったときの処理
	function terminateProc() {
		$("#msg").empty();
		alert("終了しました。");
		$("#btnSubmit").attr('disabled', false);
		$('#btnSubmit').removeAttr('disabled');
	}
    // 初期化 DIV に地図を表示
//    google.maps.event.addDomListener(window, 'load', initialize);

</script>

<body style="font-family: Arial; border: 0 none;">
<a href="/apex/SB_NameCard_SIndex">一覧に戻る</a>
<p></p>
<div id ="userName"></div>
<p style="font-size: 4pt;">
名刺データに緯度経度情報を追加して、現在地周辺の名刺 検索 を可能にします。<br/>
Google Geocoding APIを使って 名刺の住所から 緯度経度を取得して Salesforceの名刺データに保管します。<br/>
自分が所有者で、住所が入力されており、緯度か経度が空の名刺データが対象です。<br/>
1回のクリックで{!SGeolocationQueryLimit}件まとめて処理します。<br/>
Google に1件づつ、{!SGeolocationQueryInterval/1000}秒ごとに問合せていますが、連続して問い合わせるとエラーになる場合があります。<br/>
エラーがあったら繰り返して実行してください。<br/>
全ての対象の名刺の緯度経度情報の追加が完了すると、「もうない」とダイアログが表示されます。<br/>
ZERO_RESULTS となる住所は、何度やってもだめです。あきらめてください。<br/>
OVER_QUERY_LIMIT となる住所は、連続したのが原因のエラーです。再度実行してください。<br/>
この処理はこの端末で実行しているので、画面を閉じたり、アプリを終了したりしないでください。<br/>
ボタンをクリックすると、開始します。<br/>
では、どうぞ</p>
<form>
<input type="button" id="btnSubmit" value="緯度経度取得" onclick="codeAddress()" /><span id="msg"></span>
</form>
<div>
</div>
    <div id="dvMap" style="height:300px;width: 100%;"></div>
<div id="dvResult"></div>
</body>

</apex:page>